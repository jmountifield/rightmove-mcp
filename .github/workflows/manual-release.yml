name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      release_notes:
        description: 'Release notes (optional)'
        required: false
        type: string

env:
  NODE_VERSION: '20'

jobs:
  manual-release:
    name: Manual Release
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      packages: write
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: |
        npm run lint || true
        npm test || true
        npm run build
        node final-test.js
    
    - name: Bump version
      run: |
        npm version ${{ github.event.inputs.version_bump }} --no-git-tag-version
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
    
    - name: Build for production
      run: npm run build
    
    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create Git tag
      run: |
        git add package.json package-lock.json
        git commit -m "chore: manual release v${{ env.NEW_VERSION }}"
        git tag -a "v${{ env.NEW_VERSION }}" -m "Manual release v${{ env.NEW_VERSION }}"
        git push origin main
        git push origin "v${{ env.NEW_VERSION }}"
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.NEW_VERSION }}
        release_name: Release v${{ env.NEW_VERSION }}
        body: |
          ## Manual Release v${{ env.NEW_VERSION }}
          
          ${{ github.event.inputs.release_notes || 'Manual release triggered by maintainer.' }}
          
          ### Installation
          ```bash
          npx rightmove-mcp-server@${{ env.NEW_VERSION }}
          ```
          
          ### MCP Client Configuration
          ```json
          {
            "mcpServers": {
              "rightmove": {
                "command": "npx",
                "args": ["rightmove-mcp-server@${{ env.NEW_VERSION }}"]
              }
            }
          }
          ```
          
          For more details, see the [README](https://github.com/jmountifield/rightmove-mcp/blob/main/README.md).
        draft: false
        prerelease: false